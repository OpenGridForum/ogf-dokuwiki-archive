<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  <link rel="self" href="https://redmine.ogf.org/issues/238.atom"/>
  <link rel="alternate" href="https://redmine.ogf.org/"/>
  <id>https://redmine.ogf.org/</id>
  <updated>2014-11-12T04:01:09-05:00</updated>
  <author>
    <name>Open Grid Forum</name>
  </author>
  <entry>
    <title>DFDL WG - document #238: Trimming of text numbers when pad charaacter is '0'</title>
    <link rel="alternate" href="https://redmine.ogf.org/issues/238"/>
    <id>https://redmine.ogf.org/issues/238?journal_id=639</id>
    <updated>2014-11-12T04:01:09-05:00</updated>
    <author>
      <name>Steve Hanson</name>
    </author>
    <content type="html">
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt; changed from &lt;i&gt;submitted&lt;/i&gt; to &lt;i&gt;accepted&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;% Done&lt;/strong&gt; changed from &lt;i&gt;0&lt;/i&gt; to &lt;i&gt;100&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Relevant paragraph in section 13.6 updated to read:&lt;/p&gt;


	&lt;p&gt;&lt;em&gt;"When parsing, if the pad character is '0' and dfdl:textTrimKind is 'padChar' then the SimpleContent region is trimmed of the '0' characters as defined by the trimming rules.  If this trimming results in the next character in the SimpleContent region being a character other than a digit, or in all of the SimpleContent region being trimmed, then the last '0' character is re-instated and not trimmed.  This rule also applies when the pad character is a DFDL character entity equivalent to '0'. This rule does not apply when the pad character is any other character nor when a pad byte is specified."&lt;/em&gt;&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>DFDL WG - document #238: Trimming of text numbers when pad charaacter is '0'</title>
    <link rel="alternate" href="https://redmine.ogf.org/issues/238"/>
    <id>https://redmine.ogf.org/issues/238?journal_id=644</id>
    <updated>2014-11-14T09:50:12-05:00</updated>
    <author>
      <name>Andy Edwards</name>
    </author>
    <content type="html">
&lt;ul&gt;&lt;/ul&gt;&lt;p&gt;I've spotted a potential problem with this.  Consider the situation where the pad character is '0' but the value being represented is something like 'infinity' or 'not a number'.  When the infinity representation is something like 'INF', then for an element with length of 5 characters (say) that data is going to be '00INF'.  We will parse this, trim the first two zeroes down to 'INF', then see that there is a non-digit character and put a zero back, leaving us with '0INF', which doesn't make sense.&lt;/p&gt;


	&lt;p&gt;I believe that this exception/rule only exists to make sure that when trimming, a logical value of zero is parsed as zero.  Any other logical value can have all of it's zeroes trimmed and still make sense, and any other pad character would leave us with all zeroes, and result in a parsed value of zero anyway.&lt;/p&gt;


	&lt;p&gt;1 - Does the spec need to be more specific about the characters that trigger us to put a zero back, so not just non-digit, but the representation of decimal points, exponentials, signs?  Or do we say that Inf and NaN are the only "special" numbers as they are conceptual numbers and not specific decimals, so they don't trigger us to put a zero back.&lt;/p&gt;


	&lt;p&gt;2 - Alternatively, could we say that anything that logically represents zero will be parsed as zero (so ignore trimming etc, we just bypass straight to zero) and anything else is trimmed and parsed normally.  This might be easier to explain in words and it's orthogonal to how to program it (i.e. it isn't describing a specific algorithm of 'if-this-then-that')&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>DFDL WG - document #238: Trimming of text numbers when pad charaacter is '0'</title>
    <link rel="alternate" href="https://redmine.ogf.org/issues/238"/>
    <id>https://redmine.ogf.org/issues/238?journal_id=652</id>
    <updated>2014-11-18T12:40:33-05:00</updated>
    <author>
      <name>Steve Hanson</name>
    </author>
    <content type="html">
&lt;ul&gt;&lt;/ul&gt;&lt;p&gt;Revised words:&lt;/p&gt;


	&lt;p&gt;"When parsing, if the pad character is '0' and dfdl:textTrimKind is 'padChar' then the SimpleContent region is trimmed of the '0' characters as defined by the trimming rules. If at least one '0' character is removed and the trimmed text causes a processing error when parsed, a single '0' character is re-instated and the text is parsed again. This is to handle the case when '0' characters are trimmed away leaving no digits. This rule also applies when the pad character is a DFDL character entity equivalent to '0'. This rule does not apply when the pad character is any other character nor when a pad byte is specified."&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>DFDL WG - document #238: Trimming of text numbers when pad charaacter is '0'</title>
    <link rel="alternate" href="https://redmine.ogf.org/issues/238"/>
    <id>https://redmine.ogf.org/issues/238?journal_id=685</id>
    <updated>2015-01-12T08:48:32-05:00</updated>
    <author>
      <name>Steve Hanson</name>
    </author>
    <content type="html">
&lt;ul&gt;&lt;/ul&gt;&lt;p&gt;Erratum 5.7 in DFDL experience document 4&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>DFDL WG - document #238: Trimming of text numbers when pad charaacter is '0'</title>
    <link rel="alternate" href="https://redmine.ogf.org/issues/238"/>
    <id>https://redmine.ogf.org/issues/238?journal_id=1133</id>
    <updated>2017-07-25T11:12:35-04:00</updated>
    <author>
      <name>Michael Beckerle</name>
    </author>
    <content type="html">
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt; changed from &lt;i&gt;accepted&lt;/i&gt; to &lt;i&gt;closed&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;    </content>
  </entry>
</feed>
