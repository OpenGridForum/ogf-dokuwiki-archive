<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  <link rel="self" href="https://redmine.ogf.org/issues/57.atom"/>
  <link rel="alternate" href="https://redmine.ogf.org/"/>
  <id>https://redmine.ogf.org/</id>
  <updated>2013-02-19T02:47:39-05:00</updated>
  <author>
    <name>Open Grid Forum</name>
  </author>
  <entry>
    <title>DRMAAv2 C Binding - bug #57: dictionary constants have wrong type in C binding specification</title>
    <link rel="alternate" href="https://redmine.ogf.org/issues/57"/>
    <id>https://redmine.ogf.org/issues/57?journal_id=90</id>
    <updated>2013-02-19T02:47:39-05:00</updated>
    <author>
      <name>Peter Tr&#246;ger</name>
    </author>
    <content type="html">
&lt;ul&gt;&lt;/ul&gt;&lt;p&gt;Roger commented on the mailing list:&lt;/p&gt;


	&lt;p&gt;=== snip ===&lt;/p&gt;


	&lt;p&gt;Regarding issue-57, I agree that replacing the drmaa2_limit enum with a separate string for each value is a good solution to the dictionary key problem.&lt;br /&gt;I have a slight preference for this over introducing an auxiliary function which accepts the enum value and outputs a suitable string.&lt;br /&gt;Pro's: implementation simplicity, extensibility.&lt;br /&gt;Con's: removal of self-documenting enum, additional linktime resolution.&lt;br /&gt;Does spec need to clarify that the string value is the key, not the string address (don't rely on pointer comparisons).&lt;/p&gt;


	&lt;p&gt;I believe the header should include extern variable declarations not definitions (each defn should only exist in one object file).&lt;/p&gt;


	&lt;p&gt;One solution is to modify the drmaa2.h header as follows&lt;/p&gt;


	&lt;p&gt;Replace:&lt;/p&gt;


&lt;pre&gt;
   typedef enum drmaa2_limit {
     DRMAA2_CORE_FILE_SIZE = 0,
       . . .
     DRMAA2_WALLCLOCK_TIME = 7
   } drmaa2_limit;
&lt;/pre&gt;

	&lt;p&gt;With:&lt;/p&gt;


&lt;pre&gt;
   extern const char *const DRMAA2_CORE_FILE_SIZE;
    . . .
   extern const char *const DRMAA2_WALLCLOCK_TIME;
&lt;/pre&gt;

	&lt;p&gt;And stipulate that the implementation library must contain:&lt;/p&gt;


&lt;pre&gt;
   const char *const DRMAA2_CORE_FILE_SIZE = "CORE_FILE_SIZE";
    . . .
   const char *const DRMAA2_WALLCLOCK_TIME = "WALLCLOCK_TIME";
&lt;/pre&gt;

	&lt;p&gt;How does the above solution compare to updating drmaa2.h with Macros:&lt;/p&gt;


&lt;pre&gt;
   #define DRMAA2_CORE_FILE_SIZE   "CORE_FILE_SIZE" 
     . . .
   #define DRMAA2_WALLCLOCK_TIME   "WALLCLOCK_TIME" 
&lt;/pre&gt;

	&lt;p&gt;(1) The value of variables can be analyzed in a runtime debugger (to check that the variable name is consistent with its value?)&lt;/p&gt;


	&lt;p&gt;(2) Using variables may reduce the number of copies of strings in the process (the client and the drmaa implementation library may share).  This involvesmarginal expense for additional symbol resolution.&lt;/p&gt;


	&lt;p&gt;(3) Using variables is likely to be more natural to C++ programmers using the C-lang binding.&lt;/p&gt;


	&lt;p&gt;What are the &lt;sub&gt;other&lt;/sub&gt; tradeoffs between&lt;/p&gt;


&lt;pre&gt;
   extern const char *const DRMAA2_CORE_FILE_SIZE;
&lt;/pre&gt;&lt;br /&gt;and&lt;br /&gt;&lt;pre&gt;
   #define DRMAA2_CORE_FILE_SIZE   "CORE_FILE_SIZE" 
&lt;/pre&gt;
=== snip ===    </content>
  </entry>
  <entry>
    <title>DRMAAv2 C Binding - bug #57: dictionary constants have wrong type in C binding specification</title>
    <link rel="alternate" href="https://redmine.ogf.org/issues/57"/>
    <id>https://redmine.ogf.org/issues/57?journal_id=92</id>
    <updated>2013-02-19T02:51:43-05:00</updated>
    <author>
      <name>Peter Tr&#246;ger</name>
    </author>
    <content type="html">
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt; changed from &lt;i&gt;submitted&lt;/i&gt; to &lt;i&gt;accepted&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Daniel Gruber favoured the &lt;pre&gt;extern const&lt;/pre&gt; solution on the mailing list. I share this view, mainly because of argument (3) by Roger.&lt;/p&gt;


	&lt;p&gt;Since no other comments were raised on the list, we treat this issue as resolved and fix the reference implementation accordingly.&lt;/p&gt;


	&lt;p&gt;The C-binding modification is still pending for a later errata document.&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>DRMAAv2 C Binding - bug #57: dictionary constants have wrong type in C binding specification</title>
    <link rel="alternate" href="https://redmine.ogf.org/issues/57"/>
    <id>https://redmine.ogf.org/issues/57?journal_id=513</id>
    <updated>2014-09-09T18:59:35-04:00</updated>
    <author>
      <name>Peter Tr&#246;ger</name>
    </author>
    <content type="html">
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt; changed from &lt;i&gt;accepted&lt;/i&gt; to &lt;i&gt;final review&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Still agreed by OGF-42 meeting.&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>DRMAAv2 C Binding - bug #57: dictionary constants have wrong type in C binding specification</title>
    <link rel="alternate" href="https://redmine.ogf.org/issues/57"/>
    <id>https://redmine.ogf.org/issues/57?journal_id=797</id>
    <updated>2015-07-14T14:49:02-04:00</updated>
    <author>
      <name>Peter Tr&#246;ger</name>
    </author>
    <content type="html">
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt; changed from &lt;i&gt;final review&lt;/i&gt; to &lt;i&gt;closed&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;FIxed in the July 2015 errata.&lt;/p&gt;    </content>
  </entry>
</feed>
